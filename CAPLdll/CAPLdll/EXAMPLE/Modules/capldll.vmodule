<?xml version="1.0" encoding="UTF-8"?>
<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="CANoe_vmodule_1.1.xsd">
  <Name>capldll</Name>
  <Version>2020.1</Version>
  <Application>CANoe</Application>
  <Application>CANalyzer</Application>
  <ModuleType>CAPL-DLL</ModuleType>
  <SupportedArchitecture arch="Windows-x64 Windows-x86 Linux-x64"/>

  <LibraryPath arch="Windows-x64">./Windows-x64/capldll.dll</LibraryPath>
  <LibraryPath arch="Windows-x86">./Windows-x86/capldll.dll</LibraryPath>
  <LibraryPath arch="Linux-x64"  >./Linux-x64/libcapldll.so</LibraryPath>
  
  <CAPL-DLL arch="Linux-x64">
    <CDLL_VERSION>2</CDLL_VERSION>
    <CallingConvention>CDECL</CallingConvention>
    <CAN_MSG_VERSION>0</CAN_MSG_VERSION>
    <ExportTable>

      <Function>
        <FunctionName>dllInit</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will initialize all callback functions in the CAPLDLL</HintText>
        <Parameter>
          <Name>handle</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllEnd</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will release the CAPL function handle in the CAPLDLL</HintText>
        <Parameter>
          <Name>handle</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllSetValue</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will call a callback functions</HintText>
        <Parameter>
          <Name>handle</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>x</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>long</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllReadData</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will call a callback functions</HintText>
        <Parameter>
          <Name>handle</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>x</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>long</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllPut</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will save data from CAPL to DLL memory</HintText>
        <Parameter>
          <Name>x</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllGet</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will read data from DLL memory to CAPL</HintText>
        <Result>
          <Type>dword</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllVoid</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will overwrite DLL memory from CAPL without parameter</HintText>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllPutDataOnePar</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will put data from CAPL array to DLL</HintText>
        <Parameter>
          <Name>datablock</Name>
          <Type rank="1">byte</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllGetDataOnePar</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will get data from DLL into CAPL memory</HintText>
        <Parameter>
          <Name>datablock</Name>
          <Type rank="1">byte</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllPutDataTwoPars</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will put two datas from CAPL array to DLL</HintText>
        <Parameter>
          <Name>noOfBytes</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>datablock</Name>
          <Type rank="1">byte</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllGetDataTwoPars</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will get two datas from DLL into CAPL memory</HintText>
        <Parameter>
          <Name>noOfBytes</Name>
          <Type>dword</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>datablock</Name>
          <Type rank="1">byte</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>void</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllAdd</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will add two values. The return value is the result</HintText>
        <Parameter>
          <Name>x</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>y</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>long</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllSubtract</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will substract two values. The return value is the result</HintText>
        <Parameter>
          <Name>x</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>y</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>long</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllSupportLongFunctionNamesWithUpTo50Characters</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function shows the support of long function names</HintText>
        <Result>
          <Type>dword</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllAdd63Parameters</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will add 63 values. The return value is the result</HintText>
        <Parameter>
          <Name>val01</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val02</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val03</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val04</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val05</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val06</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val07</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val08</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val09</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val10</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val11</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val12</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val13</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val14</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val15</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val16</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val17</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val18</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val19</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val20</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val21</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val22</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val23</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val24</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val25</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val26</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val27</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val28</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val29</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val30</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val31</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val32</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val33</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val34</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val35</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val36</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val37</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val38</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val39</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val40</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val41</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val42</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val43</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val44</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val45</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val46</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val47</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val48</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val49</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val50</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val51</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val52</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val53</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val54</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val55</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val56</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val57</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val58</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val59</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val60</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val61</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val62</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val63</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>long</Type>
        </Result>
      </Function>

      <Function>
        <FunctionName>dllAdd64Parameters</FunctionName>
        <CategoryName>CAPL_DLL</CategoryName>
        <HintText>This function will add 64 values. The return value is the result</HintText>
        <Parameter>
          <Name>val01</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val02</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val03</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val04</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val05</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val06</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val07</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val08</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val09</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val10</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val11</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val12</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val13</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val14</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val15</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val16</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val17</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val18</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val19</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val20</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val21</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val22</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val23</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val24</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val25</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val26</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val27</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val28</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val29</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val30</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val31</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val32</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val33</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val34</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val35</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val36</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val37</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val38</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val39</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val40</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val41</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val42</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val43</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val44</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val45</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val46</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val47</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val48</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val49</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val50</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val51</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val52</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val53</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val54</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val55</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val56</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val57</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val58</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val59</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val60</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val61</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val62</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val63</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Parameter>
          <Name>val64</Name>
          <Type>long</Type>
          <ParameterPassing>CallByValue</ParameterPassing>
        </Parameter>
        <Result>
          <Type>long</Type>
        </Result>
      </Function>

    </ExportTable>
    <CallbackTable/>
  </CAPL-DLL>
</Module>
